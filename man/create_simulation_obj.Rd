% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_simulation_obj.R
\name{create_simulation_obj}
\alias{create_simulation_obj}
\title{Compile MCMC sampler using STAN and create simulation object}
\usage{
create_simulation_obj(
  data_list,
  covariate_list = NULL,
  outcome_list,
  borrowing_list,
  treatment_list
)
}
\arguments{
\item{data_list}{\code{SimDataList}. The list of lists of data matrices created
with \code{sim_data_list()}.}

\item{covariate_list}{\code{SimCovariateList}. List of covariate objects created
with \code{sim_covariate_list()}.}

\item{outcome_list}{\code{SimOutcomeList}. List of outcome objects created with
\code{sim_outcome_list()}.}

\item{borrowing_list}{\code{SimBorrowingList}. List of borrowing objects created
with \code{sim_borrowing_list()}.}

\item{treatment_list}{\code{SimTreatmentList}. List of treatment objects created
with \code{sim_treatment_list()}.}
}
\value{
Object of class \code{\link[=Simulation-class]{Simulation}}.
}
\description{
Compile MCMC sampler using STAN and create simulation object
}
\examples{
base_mat <- matrix(
  c(
    rep(0, 200), rep(0, 200), rep(1, 200),
    rep(1, 200), rep(0, 200), rep(0, 200),
    rep(0, 600)
  ),
  ncol = 3,
  dimnames = list(NULL, c("ext", "trt", "driftOR"))
)

add_binary_endpoint <- function(odds_ratio,
                                base_matrix = base_mat) {
  linear_predictor <- base_matrix[, "trt"] * log(odds_ratio)
  prob <- 1 / (1 + exp(-linear_predictor))

  bin_endpoint <- rbinom(
    NROW(base_matrix),
    1,
    prob
  )

  cbind(base_matrix, matrix(bin_endpoint, ncol = 1, dimnames = list(NULL, "ep")))
}

data_list <- list(
  list(add_binary_endpoint(1.5), add_binary_endpoint(1.5)),
  list(add_binary_endpoint(2.5), add_binary_endpoint(2.5))
)

guide <- data.frame(
  trueOR = c(1.5, 2.5),
  driftOR = c(1.0, 1.0)
)

sdl <- sim_data_list(
  data_list = data_list,
  guide = guide,
  effect = "trueOR",
  drift = "driftOR"
)

sim_object <- create_simulation_obj(
  data_list = sdl,
  outcome_list = sim_outcome_list(list(
    standard = logistic_bin_outcome("ep", normal_prior(0, 1000))
  )),
  borrowing_list = sim_borrowing_list(list(
    standard = borrowing_details("BDB", "ext", exponential_prior(0.0001))
  )),
  treatment_list = sim_treatment_list(list(
    standard = treatment_details("trt", normal_prior(0, 1000))
  ))
)
}
