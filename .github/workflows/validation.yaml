---
name: R Package Validation report 📃

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
      - pre-release
  workflow_dispatch:
  workflow_call:
    inputs:
      install-system-dependencies:
        description: Check for and install system dependencies
        required: false
        default: false
        type: boolean
      enable-staged-dependencies-check:
        description: Enable staged dependencies YAML check
        required: false
        default: true
        type: boolean

concurrency:
  group: validation-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  validation:
    name: Create report 📃
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.commits[0].message, '[skip validation]')
        && github.event.pull_request.draft == false
    container:
      image: ghcr.io/insightsengineering/rstudio_4.1.2_bioc_3.14:latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      packages: write
      deployments: write
    steps:
      - name: Set environment vars for cmdstan
        run: |
          echo "CMDSTAN_PATH=${HOME}/.cmdstan" >> $GITHUB_ENV
          echo "CMDSTAN_VERSION=2.29.2" >> $GITHUB_ENV
        shell: bash

      - name: Cache cmdstan installation
        uses: actions/cache@v3
        id: cache-cmdstan
        with:
          path: ${{ env.CMDSTAN_PATH }}
          key: ${{ runner.os }}-cmdstan-${{ env.CMDSTAN_VERSION }}
          restore-keys: ${{ runner.os }}-cmdstan-

      - name: Install cmdstan
        if: steps.cache-cmdstan.outputs.cache-hit != 'true'
        run: |
          install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
          version <- Sys.getenv("CMDSTAN_VERSION")
          url <- sprintf("https://github.com/stan-dev/cmdstan/releases/download/v%s/cmdstan-%s.tar.gz", version, version)
          cmdstanr::install_cmdstan(cores = 2, release_url = url)
        shell: Rscript {0}
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repo 🛎
        uses: actions/checkout@v3

      - name: Run Staged dependencies 🎦
        uses: insightsengineering/staged-dependencies-action@v1
        with:
          run-system-dependencies: ${{ inputs.install-system-dependencies }}
        env:
          SD_ENABLE_CHECK: ${{ inputs.enable-staged-dependencies-check }}

      - name: Build report 🏗
        uses: insightsengineering/thevalidatoR@v1
        with:
          report_output_prefix: validation_report

      - name: Upload report for review ⬆
        if: github.ref != 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: validation_report.pdf
          path: validation_report.pdf

  upload-release-assets:
    name: Upload report to release 🔼
    needs: validation
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifact ⏬
        uses: actions/download-artifact@v3
        with:
          name: validation_report.pdf

      - name: Upload report to release 🔼
        uses: svenstaro/upload-release-action@v2
        with:
          file: ./validation_report.pdf
          asset_name: validation-report.pdf
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
